Hierarchy;Name (location);Time/Call;Samples;Calls;% Time
+-;Summary;;203;;100.0
  +-;mat.hpp;;177;;87.192116
  | +-;cv::Mat::operator=(cv::Mat const&);6.536us;42;64252;20.689655
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:286);;12;;5.91133
  | | | +-;0x804da38;;10;;4.9261084
  | | | +-;0x804da30;;1;;0.49261084
  | | | +-;0x804da34;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:287);;4;;1.9704434
  | | | +-;0x804da3c;;3;;1.4778326
  | | | +-;0x804da40;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:288);;4;;1.9704434
  | | | +-;0x804da4c;;3;;1.4778326
  | | | +-;0x804da48;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:294);;4;;1.9704434
  | | | +-;0x804da9c;;2;;0.9852217
  | | | +-;0x804dac0;;2;;0.9852217
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:300);;4;;1.9704434
  | | | +-;0x804db18;;2;;0.9852217
  | | | +-;0x804db20;;2;;0.9852217
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:289);;3;;1.4778326
  | | | +-;0x804da50;;1;;0.49261084
  | | | +-;0x804da54;;1;;0.49261084
  | | | +-;0x804da58;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:301);;2;;0.9852217
  | | | +-;0x804db24;;1;;0.49261084
  | | | +-;0x804db2c;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:303);;2;;0.9852217
  | | | +-;0x804db3c;;1;;0.49261084
  | | | +-;0x804db44;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:283);;1;;0.49261084
  | | | +-;0x804da24;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:285);;1;;0.49261084
  | | | +-;0x804da2c;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:291);;1;;0.49261084
  | | | +-;0x804da78;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:292);;1;;0.49261084
  | | | +-;0x804da7c;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:295);;1;;0.49261084
  | | | +-;0x804daf4;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:299);;1;;0.49261084
  | | | +-;0x804db14;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:302);;1;;0.49261084
  | | | +-;0x804db38;;1;;0.49261084
  | | +-;cv::Mat::operator=(cv::Mat const&) (mat.hpp:282);;0;;0.0
  | |   +-;0x804da0e;;0;;0.0
  | +-;cv::operator+=(cv::Mat const&, cv::MatExpr const&);243ns;1;41047;0.49261084
  | | +-;cv::operator+=(cv::Mat const&, cv::MatExpr const&) (mat.hpp:1459);;1;;0.49261084
  | |   +-;0x8068a68;;1;;0.49261084
  | +-;cv::Mat::Mat(cv::Mat const&);229ns;1;43537;0.49261084
  | | +-;cv::Mat::Mat(cv::Mat const&) (mat.hpp:118);;1;;0.49261084
  | |   +-;0x8050088;;1;;0.49261084
  | +-;cv::Mat::type() const;172ns;1;57861;0.49261084
  | | +-;cv::Mat::type() const (mat.hpp:399);;1;;0.49261084
  | |   +-;0x804dcae;;1;;0.49261084
  | +-;cv::Mat::release();62ns;83;13343070;40.8867
  | | +-;cv::Mat::release() (mat.hpp:368);;47;;23.15271
  | | | +-;0x804dc68;;7;;3.4482758
  | | | +-;0x804dc74;;6;;2.955665
  | | | +-;0x804dc78;;5;;2.4630542
  | | | +-;0x804dc70;;4;;1.9704434
  | | | +-;0x804dc80;;4;;1.9704434
  | | | +-;0x804dc84;;4;;1.9704434
  | | | +-;0x804dc8c;;4;;1.9704434
  | | | +-;0x804dc90;;4;;1.9704434
  | | | +-;0x804dc7c;;3;;1.4778326
  | | | +-;0x804dc88;;3;;1.4778326
  | | | +-;0x804dc94;;3;;1.4778326
  | | +-;cv::Mat::release() (mat.hpp:366);;21;;10.344828
  | | | +-;0x804dc48;;9;;4.4334974
  | | | +-;0x804dc34;;8;;3.9408867
  | | | +-;0x804dc58;;2;;0.9852217
  | | | +-;0x804dc3c;;1;;0.49261084
  | | | +-;0x804dc54;;1;;0.49261084
  | | +-;cv::Mat::release() (mat.hpp:369);;8;;3.9408867
  | | | +-;0x804dca0;;6;;2.955665
  | | | +-;0x804dc9c;;2;;0.9852217
  | | +-;cv::Mat::release() (mat.hpp:365);;6;;2.955665
  | | | +-;0x804dc24;;4;;1.9704434
  | | | +-;0x804dc28;;1;;0.49261084
  | | | +-;0x804dc2c;;1;;0.49261084
  | | +-;cv::Mat::release() (mat.hpp:371);;1;;0.49261084
  | |   +-;0x804dcac;;1;;0.49261084
  | +-;cv::MatExpr::~MatExpr();57ns;6;1037104;2.955665
  | | +-;cv::MatExpr::~MatExpr() (mat.hpp:1211);;6;;2.955665
  | |   +-;0x8058a94;;1;;0.49261084
  | |   +-;0x8058aa4;;1;;0.49261084
  | |   +-;0x8058aa8;;1;;0.49261084
  | |   +-;0x8058aac;;1;;0.49261084
  | |   +-;0x8058ab0;;1;;0.49261084
  | |   +-;0x8058ae4;;1;;0.49261084
  | +-;cv::Mat::operator=(cv::MatExpr const&);35ns;3;840340;1.4778326
  | | +-;cv::Mat::operator=(cv::MatExpr const&) (mat.hpp:1417);;2;;0.9852217
  | | | +-;0x8058020;;2;;0.9852217
  | | +-;cv::Mat::operator=(cv::MatExpr const&) (mat.hpp:1418);;1;;0.49261084
  | |   +-;0x8058044;;1;;0.49261084
  | +-;cv::Mat_<float>::operator()(int, int);22ns;14;6186186;6.8965516
  | | +-;cv::Mat_<float>::operator()(int, int) (mat.hpp:991);;14;;6.8965516
  | |   +-;0x804e070;;6;;2.955665
  | |   +-;0x804e068;;4;;1.9704434
  | |   +-;0x804e078;;2;;0.9852217
  | |   +-;0x804e064;;1;;0.49261084
  | |   +-;0x804e080;;1;;0.49261084
  | +-;cv::Mat::~Mat();20ns;14;6689184;6.8965516
  | | +-;cv::Mat::~Mat() (mat.hpp:274);;6;;2.955665
  | | | +-;0x804d9e0;;3;;1.4778326
  | | | +-;0x804d9d8;;2;;0.9852217
  | | | +-;0x804d9dc;;1;;0.49261084
  | | +-;cv::Mat::~Mat() (mat.hpp:276);;4;;1.9704434
  | | | +-;0x804d9e4;;2;;0.9852217
  | | | +-;0x804d9e8;;1;;0.49261084
  | | | +-;0x804d9ec;;1;;0.49261084
  | | +-;cv::Mat::~Mat() (mat.hpp:277);;4;;1.9704434
  | | | +-;0x804d9f0;;2;;0.9852217
  | | | +-;0x804d9f4;;1;;0.49261084
  | | | +-;0x804d9f8;;1;;0.49261084
  | | +-;cv::Mat::~Mat() (mat.hpp:279);;0;;0.0
  | |   +-;0x804da0c;;0;;0.0
  | +-;cv::Mat::MStep::operator[](int);9ns;6;6485542;2.955665
  | | +-;cv::Mat::MStep::operator[](int) (mat.hpp:738);;6;;2.955665
  | |   +-;0x804dd68;;3;;1.4778326
  | |   +-;0x804dd6c;;3;;1.4778326
  | +-;cv::Mat::MStep::operator[](int) const;7ns;5;6485542;2.4630542
  | | +-;cv::Mat::MStep::operator[](int) const (mat.hpp:737);;5;;2.4630542
  | |   +-;0x804dd48;;2;;0.9852217
  | |   +-;0x804dd50;;2;;0.9852217
  | |   +-;0x804dd54;;1;;0.49261084
  | +-;cv::Mat::create(cv::Size_<int>, int);0ns;0;1;0.0
  | +-;cv::_InputArray::_InputArray<unsigned char>(std::vector<unsigned char, std::allocator<unsigned char> > const&);0ns;0;526;0.0
  | +-;cv::_OutputArray::_OutputArray<unsigned char>(std::vector<unsigned char, std::allocator<unsigned char> >&);0ns;0;526;0.0
  | +-;cv::Mat::MSize::operator()() const;0ns;0;529;0.0
  | +-;cv::Mat::clone() const;0ns;0;567;0.0
  | +-;cv::Mat::operator()(cv::Rect_<int> const&) const;0ns;0;1054;0.0
  | +-;cv::Mat::total() const;0ns;0;1054;0.0
  | +-;cv::Mat::empty() const;0ns;0;1095;0.0
  | +-;cv::Mat_<float>::operator=(cv::Mat_<float> const&);0ns;0;4200;0.0
  | +-;cv::_OutputArray::_OutputArray<float>(cv::Mat_<float>&);0ns;0;18936;0.0
  | +-;cv::Mat::Mat(int, int, int);0ns;0;37872;0.0
  | +-;cv::Mat_<float>::Mat_(int, int);0ns;0;37872;0.0
  | +-;cv::Mat::create(int, int, int);0ns;0;37873;0.0
  | +-;cv::_OutputArray::_OutputArray<cv::Point_<float> >(std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >&);0ns;0;38398;0.0
  | +-;cv::Point_<float>* cv::Mat::ptr<cv::Point_<float> >(int);0ns;0;38924;0.0
  | +-;cv::_InputArray::_InputArray<cv::Point_<float> >(std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > const&);0ns;0;39976;0.0
  | +-;cv::Mat_<float>::Mat_(cv::Mat const&);0ns;0;56282;0.0
  | +-;_ZNK2cv7MatExprcvNS_4Mat_IT_EEIfEEv;0ns;0;56808;0.0
  | +-;cv::_InputArray::_InputArray<float>(cv::Mat_<float> const&);0ns;0;56808;0.0
  | +-;cv::Mat_<float>::operator=(cv::Mat const&);0ns;0;57334;0.0
  | +-;cv::MatExpr::operator cv::Mat() const;0ns;0;61037;0.0
  | +-;cv::Mat_<float>::Mat_();0ns;0;76796;0.0
  | +-;cv::Mat::ptr(int);0ns;0;159282;0.0
  | +-;cv::Mat_<float>::operator[](int);0ns;0;159282;0.0
  | +-;cv::Mat::Mat();0ns;0;195789;0.0
  | +-;cv::Mat::initEmpty();0ns;0;233661;0.0
  | | +-;cv::Mat::initEmpty() (mat.hpp:59);;0;;0.0
  | |   +-;0x804d922;;0;;0.0
  | +-;cv::Mat::MSize::MSize(int*);0ns;0;277198;0.0
  | +-;cv::Mat::MStep::MStep();0ns;0;277198;0.0
  | +-;cv::Mat_<float>::operator()(cv::Rect_<int> const&) const;;1;;0.49261084
  |   +-;cv::Mat_<float>::operator()(cv::Rect_<int> const&) const (mat.hpp:974);;1;;0.49261084
  |     +-;0x805907e;;1;;0.49261084
  +-;global_motion.cpp;;16;;7.8817735
  | +-;cv::videostab::estimateGlobalMotionRansac(cv::_InputArray const&, cv::_InputArray const&, int, cv::videostab::RansacParams const&, float*, int*);133.079us;7;526;3.4482758
  | | +-;cv::videostab::estimateGlobalMotionRansac(cv::_InputArray const&, cv::_InputArray const&, int, cv::videostab::RansacParams const&, float*, int*) (global_motion.cpp:407);;2;;0.9852217
  | | | +-;0x8054018;;1;;0.49261084
  | | | +-;0x8054048;;1;;0.49261084
  | | +-;cv::videostab::estimateGlobalMotionRansac(cv::_InputArray const&, cv::_InputArray const&, int, cv::videostab::RansacParams const&, float*, int*) (global_motion.cpp:408);;2;;0.9852217
  | | | +-;0x80540dc;;1;;0.49261084
  | | | +-;0x80540e0;;1;;0.49261084
  | | +-;cv::videostab::estimateGlobalMotionRansac(cv::_InputArray const&, cv::_InputArray const&, int, cv::videostab::RansacParams const&, float*, int*) (global_motion.cpp:409);;2;;0.9852217
  | | | +-;0x8054130;;1;;0.49261084
  | | | +-;0x805413c;;1;;0.49261084
  | | +-;cv::videostab::estimateGlobalMotionRansac(cv::_InputArray const&, cv::_InputArray const&, int, cv::videostab::RansacParams const&, float*, int*) (global_motion.cpp:403);;1;;0.49261084
  | |   +-;0x8054160;;1;;0.49261084
  | +-;cv::videostab::KeypointBasedMotionEstimator::estimate(cv::Mat const&, cv::Mat const&, bool*);19.011us;1;526;0.49261084
  | | +-;cv::videostab::KeypointBasedMotionEstimator::estimate(cv::Mat const&, cv::Mat const&, bool*) (global_motion.cpp:683);;1;;0.49261084
  | |   +-;0x8056780;;1;;0.49261084
  | +-;cv::videostab::getMotion(int, int, std::vector<cv::Mat, std::allocator<cv::Mat> > const&);1.218us;5;41047;2.4630542
  | | +-;cv::videostab::getMotion(int, int, std::vector<cv::Mat, std::allocator<cv::Mat> > const&) (global_motion.cpp:818);;3;;1.4778326
  | | | +-;0x8057954;;2;;0.9852217
  | | | +-;0x805790c;;1;;0.49261084
  | | +-;cv::videostab::getMotion(int, int, std::vector<cv::Mat, std::allocator<cv::Mat> > const&) (global_motion.cpp:812);;2;;0.9852217
  | |   +-;0x80578e0;;1;;0.49261084
  | |   +-;0x80578e4;;1;;0.49261084
  | +-;cv::videostab::normalizePoints(int, cv::Point_<float>*);528ns;2;37872;0.9852217
  | | +-;cv::videostab::normalizePoints(int, cv::Point_<float>*) (global_motion.cpp:76);;1;;0.49261084
  | | | +-;0x8050574;;1;;0.49261084
  | | +-;cv::videostab::normalizePoints(int, cv::Point_<float>*) (global_motion.cpp:81);;1;;0.49261084
  | |   +-;0x80505b8;;1;;0.49261084
  | +-;cv::videostab::estimateGlobMotionLeastSquaresAffine(int, cv::Point_<float>*, cv::Point_<float>*, float*);528ns;1;18936;0.49261084
  | | +-;cv::videostab::estimateGlobMotionLeastSquaresAffine(int, cv::Point_<float>*, cv::Point_<float>*, float*) (global_motion.cpp:302);;1;;0.49261084
  | |   +-;0x80529d4;;1;;0.49261084
  | +-;_GLOBAL__sub_I__ZN2cv9videostab32estimateGlobalMotionLeastSquaresERKNS_12_OutputArrayES3_iPf;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  | +-;cv::videostab::KeypointBasedMotionEstimator::KeypointBasedMotionEstimator(cv::Ptr<cv::videostab::MotionEstimatorBase>);0ns;0;2;0.0
  | +-;cv::videostab::MotionEstimatorRansacL2::MotionEstimatorRansacL2(cv::videostab::MotionModel);0ns;0;2;0.0
  | +-;cv::videostab::MotionEstimatorRansacL2::estimate(cv::_InputArray const&, cv::_InputArray const&, bool*);0ns;0;526;0.0
  | +-;cv::videostab::estimateGlobalMotionLeastSquares(cv::_OutputArray const&, cv::_OutputArray const&, int, float*);0ns;0;18936;0.0
  +-;operations.hpp;;4;;1.9704434
  | +-;cv::RNG::next();173ns;1;57747;0.49261084
  | | +-;cv::RNG::next() (operations.hpp:2484);;1;;0.49261084
  | |   +-;0x8057c80;;1;;0.49261084
  | +-;cv::Point_<float>::operator=(cv::Point_<float> const&);13ns;3;2227592;1.4778326
  | | +-;cv::Point_<float>::operator=(cv::Point_<float> const&) (operations.hpp:1620);;3;;1.4778326
  | |   +-;0x805906c;;1;;0.49261084
  | |   +-;0x8059070;;1;;0.49261084
  | |   +-;0x805907c;;1;;0.49261084
  | +-;cv::Ptr<IMotionEstimatorBuilder>::operator->();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::DeblurerBase>::Ptr();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::DeblurerBase>::Ptr(cv::videostab::DeblurerBase*);0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::DeblurerBase>::delete_obj();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::DeblurerBase>::operator cv::videostab::DeblurerBase*();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::DeblurerBase>::operator=(cv::Ptr<cv::videostab::DeblurerBase> const&);0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::ILog>::Ptr();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::ILog>::Ptr(cv::videostab::ILog*);0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::ILog>::delete_obj();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::ILog>::operator=(cv::Ptr<cv::videostab::ILog> const&);0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::Ptr(cv::Ptr<cv::videostab::IOutlierRejector> const&);0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::addref();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::Ptr();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::Ptr(cv::Ptr<cv::videostab::ImageMotionEstimatorBase> const&);0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::addref();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::InpainterBase>::Ptr();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::InpainterBase>::operator cv::videostab::InpainterBase*();0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::InpainterBase>::operator=(cv::Ptr<cv::videostab::InpainterBase> const&);0ns;0;1;0.0
  | +-;cv::Ptr<cv::videostab::MotionFilterBase>::Ptr();0ns;0;1;0.0
  | +-;cv::Ptr<IMotionEstimatorBuilder>::Ptr();0ns;0;2;0.0
  | +-;cv::Ptr<IMotionEstimatorBuilder>::Ptr(IMotionEstimatorBuilder*);0ns;0;2;0.0
  | +-;cv::Ptr<IMotionEstimatorBuilder>::delete_obj();0ns;0;2;0.0
  | +-;cv::Ptr<IMotionEstimatorBuilder>::operator=(cv::Ptr<IMotionEstimatorBuilder> const&);0ns;0;2;0.0
  | +-;cv::Ptr<cv::FeatureDetector>::Ptr();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::DeblurerBase>::~Ptr();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::IFrameSource>::Ptr();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::ILog>::~Ptr();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::Ptr();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::ISparseOptFlowEstimator>::Ptr();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::ISparseOptFlowEstimator>::Ptr(cv::videostab::ISparseOptFlowEstimator*);0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::ISparseOptFlowEstimator>::delete_obj();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::ISparseOptFlowEstimator>::operator=(cv::Ptr<cv::videostab::ISparseOptFlowEstimator> const&);0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::Ptr(cv::videostab::ImageMotionEstimatorBase*);0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::delete_obj();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::operator=(cv::Ptr<cv::videostab::ImageMotionEstimatorBase> const&);0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::InpainterBase>::Ptr(cv::videostab::InpainterBase*);0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::InpainterBase>::delete_obj();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::MotionEstimatorBase>::Ptr(cv::Ptr<cv::videostab::MotionEstimatorBase> const&);0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::MotionEstimatorBase>::Ptr(cv::videostab::MotionEstimatorBase*);0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::MotionEstimatorBase>::addref();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::MotionEstimatorBase>::delete_obj();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::MotionFilterBase>::Ptr(cv::videostab::MotionFilterBase*);0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::MotionFilterBase>::delete_obj();0ns;0;2;0.0
  | +-;cv::Ptr<cv::videostab::MotionFilterBase>::operator=(cv::Ptr<cv::videostab::MotionFilterBase> const&);0ns;0;2;0.0
  | +-;cv::Ptr<cv::FeatureDetector>::Ptr(cv::FeatureDetector*);0ns;0;3;0.0
  | +-;cv::Ptr<cv::FeatureDetector>::delete_obj();0ns;0;3;0.0
  | +-;cv::Ptr<cv::FeatureDetector>::operator=(cv::Ptr<cv::FeatureDetector> const&);0ns;0;3;0.0
  | +-;cv::Ptr<cv::videostab::DeblurerBase>::release();0ns;0;3;0.0
  | +-;cv::Ptr<cv::videostab::IFrameSource>::operator=(cv::Ptr<cv::videostab::IFrameSource> const&);0ns;0;3;0.0
  | +-;cv::Ptr<cv::videostab::ILog>::release();0ns;0;3;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::Ptr(cv::videostab::IOutlierRejector*);0ns;0;3;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::delete_obj();0ns;0;3;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::operator=(cv::Ptr<cv::videostab::IOutlierRejector> const&);0ns;0;3;0.0
  | +-;cv::Ptr<cv::videostab::InpainterBase>::~Ptr();0ns;0;3;0.0
  | +-;cv::Ptr<cv::videostab::MotionFilterBase>::~Ptr();0ns;0;3;0.0
  | +-;cv::Ptr<IMotionEstimatorBuilder>::~Ptr();0ns;0;4;0.0
  | +-;cv::Ptr<cv::videostab::IFrameSource>::Ptr(cv::videostab::IFrameSource*);0ns;0;4;0.0
  | +-;cv::Ptr<cv::videostab::IFrameSource>::delete_obj();0ns;0;4;0.0
  | +-;cv::Ptr<cv::videostab::ISparseOptFlowEstimator>::~Ptr();0ns;0;4;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::~Ptr();0ns;0;4;0.0
  | +-;cv::Ptr<cv::videostab::InpainterBase>::release();0ns;0;4;0.0
  | +-;cv::Ptr<cv::videostab::MotionEstimatorBase>::release();0ns;0;4;0.0
  | +-;cv::Ptr<cv::videostab::MotionEstimatorBase>::~Ptr();0ns;0;4;0.0
  | +-;cv::Size_<int>::operator=(cv::Size_<int> const&);0ns;0;4;0.0
  | +-;cv::Ptr<cv::FeatureDetector>::~Ptr();0ns;0;5;0.0
  | +-;cv::Ptr<cv::videostab::IFrameSource>::~Ptr();0ns;0;5;0.0
  | +-;cv::Ptr<cv::videostab::MotionFilterBase>::release();0ns;0;5;0.0
  | +-;cv::Ptr<IMotionEstimatorBuilder>::release();0ns;0;6;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::~Ptr();0ns;0;6;0.0
  | +-;cv::Ptr<cv::videostab::ISparseOptFlowEstimator>::release();0ns;0;6;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::release();0ns;0;6;0.0
  | +-;cv::Ptr<cv::FeatureDetector>::release();0ns;0;8;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::release();0ns;0;9;0.0
  | +-;cv::Ptr<cv::videostab::IFrameSource>::release();0ns;0;10;0.0
  | +-;cv::Ptr<cv::FeatureDetector>::operator->();0ns;0;526;0.0
  | +-;cv::Ptr<cv::videostab::IOutlierRejector>::operator cv::videostab::IOutlierRejector*();0ns;0;526;0.0
  | +-;cv::Ptr<cv::videostab::ISparseOptFlowEstimator>::operator->();0ns;0;526;0.0
  | +-;cv::RNG::RNG(unsigned long long);0ns;0;526;0.0
  | +-;cv::TermCriteria::TermCriteria(int, int, double);0ns;0;526;0.0
  | +-;cv::Matx<double, 4, 1>::Matx();0ns;0;527;0.0
  | +-;cv::Ptr<cv::videostab::MotionFilterBase>::operator->();0ns;0;527;0.0
  | +-;cv::Scalar_<double>::Scalar_();0ns;0;527;0.0
  | +-;cv::Vec<double, 4>::Vec();0ns;0;527;0.0
  | +-;cv::Ptr<cv::videostab::MotionEstimatorBase>::operator->();0ns;0;528;0.0
  | +-;cv::Ptr<cv::videostab::MotionEstimatorBase>::operator->() const;0ns;0;528;0.0
  | +-;cv::Size_<int>::Size_(int, int);0ns;0;532;0.0
  | +-;cv::Ptr<cv::videostab::ILog>::operator->();0ns;0;569;0.0
  | +-;cv::Ptr<cv::videostab::ImageMotionEstimatorBase>::operator->();0ns;0;1054;0.0
  | +-;cv::Rect_<int>::Rect_(int, int, int, int);0ns;0;1054;0.0
  | +-;cv::Size_<int>::Size_(cv::Size_<int> const&);0ns;0;1054;0.0
  | +-;cv::Ptr<cv::videostab::IFrameSource>::operator->();0ns;0;1662;0.0
  | +-;cv::Point_<float>::Point_();0ns;0;42606;0.0
  | +-;cv::RNG::operator unsigned int();0ns;0;57747;0.0
  | +-;cv::Size_<int>::Size_();0ns;0;97313;0.0
  | +-;cv::Point_<float>::Point_(cv::Point_<float> const&);0ns;0;170602;0.0
  +-;cmath;;2;;0.9852217
  | +-;std::sqrt(float);101ns;2;197156;0.9852217
  | | +-;std::sqrt(float) (cmath:486);;2;;0.9852217
  | |   +-;0x804ec7c;;2;;0.9852217
  | +-;std::exp(float);0ns;0;112;0.0
  | +-;std::ceil(float);0ns;0;526;0.0
  | +-;std::pow(float, int);0ns;0;526;0.0
  | +-;std::log(float);0ns;0;1052;0.0
  | +-;std::floor(float);0ns;0;1054;0.0
  | +-;std::abs(float);;0;;0.0
  |   +-;std::abs(float) (cmath:91);;0;;0.0
  |     +-;0x804d920;;0;;0.0
  +-;stl_vector.h;;2;;0.9852217
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::operator[](unsigned int) const;12ns;1;820527;0.49261084
  | | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::operator[](unsigned int) const (stl_vector.h:766);;1;;0.49261084
  | |   +-;0x804e22c;;1;;0.49261084
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::size() const;12ns;1;829178;0.49261084
  | | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::size() const (stl_vector.h:626);;1;;0.49261084
  | |   +-;0x804e208;;1;;0.49261084
  | +-;std::_Vector_base<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::_M_deallocate(cv::Ptr<cv::videostab::InpainterBase>*, unsigned int);0ns;0;1;0.0
  | +-;std::_Vector_base<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::_M_get_Tp_allocator();0ns;0;1;0.0
  | +-;std::_Vector_base<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::_Vector_base();0ns;0;1;0.0
  | +-;std::_Vector_base<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::_Vector_impl::_Vector_impl();0ns;0;1;0.0
  | +-;std::_Vector_base<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::_Vector_impl::~_Vector_impl();0ns;0;1;0.0
  | +-;std::_Vector_base<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::~_Vector_base();0ns;0;1;0.0
  | +-;std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::begin() const;0ns;0;1;0.0
  | +-;std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::empty() const;0ns;0;1;0.0
  | +-;std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::end() const;0ns;0;1;0.0
  | +-;std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::vector();0ns;0;1;0.0
  | +-;std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > >::~vector();0ns;0;1;0.0
  | +-;std::vector<float, std::allocator<float> >::_M_erase_at_end(float*);0ns;0;1;0.0
  | +-;std::vector<float, std::allocator<float> >::clear();0ns;0;1;0.0
  | +-;cv::Point_<float>* std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_allocate_and_copy<cv::Point_<float>*>(unsigned int, cv::Point_<float>*, cv::Point_<float>*);0ns;0;2;0.0
  | +-;std::_Vector_base<cv::KeyPoint, std::allocator<cv::KeyPoint> >::_M_deallocate(cv::KeyPoint*, unsigned int);0ns;0;2;0.0
  | +-;std::_Vector_base<cv::KeyPoint, std::allocator<cv::KeyPoint> >::_M_get_Tp_allocator();0ns;0;2;0.0
  | +-;std::_Vector_base<cv::KeyPoint, std::allocator<cv::KeyPoint> >::_Vector_base();0ns;0;2;0.0
  | +-;std::_Vector_base<cv::KeyPoint, std::allocator<cv::KeyPoint> >::_Vector_impl::_Vector_impl();0ns;0;2;0.0
  | +-;std::_Vector_base<cv::KeyPoint, std::allocator<cv::KeyPoint> >::_Vector_impl::~_Vector_impl();0ns;0;2;0.0
  | +-;std::_Vector_base<cv::KeyPoint, std::allocator<cv::KeyPoint> >::~_Vector_base();0ns;0;2;0.0
  | +-;std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int);0ns;0;2;0.0
  | +-;std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_deallocate(unsigned char*, unsigned int);0ns;0;2;0.0
  | +-;std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator();0ns;0;2;0.0
  | +-;std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base();0ns;0;2;0.0
  | +-;std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl();0ns;0;2;0.0
  | +-;std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::~_Vector_impl();0ns;0;2;0.0
  | +-;std::_Vector_base<unsigned char, std::allocator<unsigned char> >::~_Vector_base();0ns;0;2;0.0
  | +-;std::vector<cv::KeyPoint, std::allocator<cv::KeyPoint> >::vector();0ns;0;2;0.0
  | +-;std::vector<cv::KeyPoint, std::allocator<cv::KeyPoint> >::~vector();0ns;0;2;0.0
  | +-;std::vector<float, std::allocator<float> >::_M_check_len(unsigned int, char const*) const;0ns;0;2;0.0
  | +-;std::vector<float, std::allocator<float> >::begin();0ns;0;2;0.0
  | +-;std::vector<float, std::allocator<float> >::end();0ns;0;2;0.0
  | +-;std::vector<float, std::allocator<float> >::insert(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, unsigned int, float const&);0ns;0;2;0.0
  | +-;std::vector<float, std::allocator<float> >::resize(unsigned int, float);0ns;0;2;0.0
  | +-;std::vector<unsigned char, std::allocator<unsigned char> >::vector();0ns;0;2;0.0
  | +-;std::vector<unsigned char, std::allocator<unsigned char> >::~vector();0ns;0;2;0.0
  | +-;std::_Vector_base<float, std::allocator<float> >::_Vector_base();0ns;0;3;0.0
  | +-;std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl();0ns;0;3;0.0
  | +-;std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl();0ns;0;3;0.0
  | +-;std::_Vector_base<float, std::allocator<float> >::~_Vector_base();0ns;0;3;0.0
  | +-;std::vector<float, std::allocator<float> >::vector();0ns;0;3;0.0
  | +-;std::vector<float, std::allocator<float> >::~vector();0ns;0;3;0.0
  | +-;std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const;0ns;0;4;0.0
  | +-;std::vector<float, std::allocator<float> >::max_size() const;0ns;0;4;0.0
  | +-;std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_base();0ns;0;5;0.0
  | +-;std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::_Vector_impl();0ns;0;5;0.0
  | +-;std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::~_Vector_impl();0ns;0;5;0.0
  | +-;std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::~_Vector_base();0ns;0;5;0.0
  | +-;std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned int);0ns;0;5;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_erase_at_end(cv::Mat*);0ns;0;5;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::clear();0ns;0;5;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::end();0ns;0;5;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, unsigned int, cv::Mat const&);0ns;0;5;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::resize(unsigned int, cv::Mat);0ns;0;5;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::vector();0ns;0;5;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector();0ns;0;5;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_Vector_base();0ns;0;8;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_Vector_impl::_Vector_impl();0ns;0;8;0.0
  | | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_Vector_impl::_Vector_impl() (stl_vector.h:89);;0;;0.0
  | |   +-;0x805b0e0;;0;;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::vector();0ns;0;8;0.0
  | +-;std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator();0ns;0;12;0.0
  | +-;std::vector<float, std::allocator<float> >::size() const;0ns;0;12;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned int);0ns;0;526;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned int, std::allocator<int> const&);0ns;0;526;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&);0ns;0;526;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl();0ns;0;526;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::~_Vector_base();0ns;0;526;0.0
  | +-;std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned int, int const&);0ns;0;526;0.0
  | +-;std::vector<int, std::allocator<int> >::vector(unsigned int, int const&, std::allocator<int> const&);0ns;0;526;0.0
  | +-;std::vector<int, std::allocator<int> >::~vector();0ns;0;526;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_erase_at_end(cv::Point_<float>*);0ns;0;1052;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::capacity() const;0ns;0;1052;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::clear();0ns;0;1052;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::end();0ns;0;1053;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::insert(__gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > >, unsigned int, cv::Point_<float> const&);0ns;0;1053;0.0
  | +-;std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_allocate(unsigned int);0ns;0;1057;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_check_len(unsigned int, char const*) const;0ns;0;1057;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::begin();0ns;0;1057;0.0
  | +-;std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_deallocate(cv::Mat*, unsigned int);0ns;0;1062;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::resize(unsigned int, cv::Point_<float>);0ns;0;1578;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_create_storage(unsigned int);0ns;0;2104;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_Vector_base(unsigned int, std::allocator<cv::Point_<float> > const&);0ns;0;2104;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_Vector_impl::_Vector_impl(std::allocator<cv::Point_<float> > const&);0ns;0;2104;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_fill_initialize(unsigned int, cv::Point_<float> const&);0ns;0;2104;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::vector(unsigned int, cv::Point_<float> const&, std::allocator<cv::Point_<float> > const&);0ns;0;2104;0.0
  | +-;std::vector<int, std::allocator<int> >::_M_check_len(unsigned int, char const*) const;0ns;0;2104;0.0
  | +-;std::vector<int, std::allocator<int> >::begin();0ns;0;2104;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_Vector_impl::~_Vector_impl();0ns;0;2112;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::~_Vector_base();0ns;0;2112;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::~vector();0ns;0;2112;0.0
  | +-;std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator() const;0ns;0;2114;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::max_size() const;0ns;0;2114;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned int);0ns;0;2630;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int);0ns;0;2630;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const;0ns;0;4208;0.0
  | +-;std::vector<int, std::allocator<int> >::max_size() const;0ns;0;4208;0.0
  | +-;std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator();0ns;0;4238;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::operator[](unsigned int);0ns;0;4413;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_Vector_impl::_M_swap_data(std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_Vector_impl&);0ns;0;8400;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::swap(std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >&);0ns;0;8400;0.0
  | +-;std::vector<int, std::allocator<int> >::size() const;0ns;0;8416;0.0
  | +-;std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator();0ns;0;9468;0.0
  | +-;std::vector<cv::KeyPoint, std::allocator<cv::KeyPoint> >::operator[](unsigned int);0ns;0;26300;0.0
  | +-;std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int);0ns;0;26300;0.0
  | +-;std::vector<cv::KeyPoint, std::allocator<cv::KeyPoint> >::size() const;0ns;0;27352;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_check_len(unsigned int, char const*) const;0ns;0;31035;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::begin();0ns;0;31035;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_allocate(unsigned int);0ns;0;33141;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_deallocate(cv::Point_<float>*, unsigned int);0ns;0;33149;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::push_back(cv::Point_<float> const&);0ns;0;52298;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_get_Tp_allocator() const;0ns;0;63122;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::max_size() const;0ns;0;63122;0.0
  | +-;std::vector<float, std::allocator<float> >::operator[](unsigned int);0ns;0;82318;0.0
  | +-;std::_Vector_base<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_get_Tp_allocator();0ns;0;116230;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::size() const;0ns;0;155176;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::operator[](unsigned int);0ns;0;237880;0.0
  | +-;std::vector<int, std::allocator<int> >::operator[](unsigned int);0ns;0;285717;0.0
  +-;stl_construct.h;;1;;0.49261084
  | +-;void std::_Construct<cv::Point_<float>, cv::Point_<float> >(cv::Point_<float>*, cv::Point_<float> const&);113ns;1;88322;0.49261084
  | | +-;void std::_Construct<cv::Point_<float>, cv::Point_<float> >(cv::Point_<float>*, cv::Point_<float> const&) (stl_construct.h:85);;1;;0.49261084
  | |   +-;0x805b8ac;;1;;0.49261084
  | +-;void std::_Destroy<cv::Ptr<cv::videostab::InpainterBase>*, cv::Ptr<cv::videostab::InpainterBase> >(cv::Ptr<cv::videostab::InpainterBase>*, cv::Ptr<cv::videostab::InpainterBase>*, std::allocator<cv::Ptr<cv::videostab::InpainterBase> >&);0ns;0;1;0.0
  | +-;void std::_Destroy<cv::Ptr<cv::videostab::InpainterBase>*>(cv::Ptr<cv::videostab::InpainterBase>*, cv::Ptr<cv::videostab::InpainterBase>*);0ns;0;1;0.0
  | +-;void std::_Destroy_aux<false>::__destroy<cv::Ptr<cv::videostab::InpainterBase>*>(cv::Ptr<cv::videostab::InpainterBase>*, cv::Ptr<cv::videostab::InpainterBase>*);0ns;0;1;0.0
  | +-;void std::_Destroy<cv::KeyPoint*, cv::KeyPoint>(cv::KeyPoint*, cv::KeyPoint*, std::allocator<cv::KeyPoint>&);0ns;0;2;0.0
  | +-;void std::_Destroy<cv::KeyPoint*>(cv::KeyPoint*, cv::KeyPoint*);0ns;0;2;0.0
  | +-;void std::_Destroy<unsigned char*, unsigned char>(unsigned char*, unsigned char*, std::allocator<unsigned char>&);0ns;0;2;0.0
  | +-;void std::_Destroy<unsigned char*>(unsigned char*, unsigned char*);0ns;0;2;0.0
  | +-;void std::_Destroy_aux<true>::__destroy<cv::KeyPoint*>(cv::KeyPoint*, cv::KeyPoint*);0ns;0;2;0.0
  | +-;void std::_Destroy_aux<true>::__destroy<unsigned char*>(unsigned char*, unsigned char*);0ns;0;2;0.0
  | +-;void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&);0ns;0;6;0.0
  | +-;void std::_Destroy<float*>(float*, float*);0ns;0;6;0.0
  | +-;void std::_Destroy_aux<true>::__destroy<float*>(float*, float*);0ns;0;6;0.0
  | +-;void std::_Destroy<cv::Mat>(cv::Mat*);0ns;0;405;0.0
  | +-;void std::_Destroy<cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&);0ns;0;1067;0.0
  | +-;void std::_Destroy<cv::Mat*>(cv::Mat*, cv::Mat*);0ns;0;1067;0.0
  | +-;void std::_Destroy_aux<false>::__destroy<cv::Mat*>(cv::Mat*, cv::Mat*);0ns;0;1067;0.0
  | +-;void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&);0ns;0;2630;0.0
  | +-;void std::_Destroy<int*>(int*, int*);0ns;0;2630;0.0
  | +-;void std::_Destroy_aux<true>::__destroy<int*>(int*, int*);0ns;0;2630;0.0
  | +-;void std::_Construct<cv::Mat, cv::Mat>(cv::Mat*, cv::Mat const&);0ns;0;4613;0.0
  | +-;void std::_Destroy<cv::Point_<float>*, cv::Point_<float> >(cv::Point_<float>*, cv::Point_<float>*, std::allocator<cv::Point_<float> >&);0ns;0;34201;0.0
  | +-;void std::_Destroy<cv::Point_<float>*>(cv::Point_<float>*, cv::Point_<float>*);0ns;0;34201;0.0
  | +-;void std::_Destroy_aux<true>::__destroy<cv::Point_<float>*>(cv::Point_<float>*, cv::Point_<float>*);0ns;0;34201;0.0
  +-;vector.tcc;;1;;0.49261084
  | +-;std::vector<float, std::allocator<float> >::_M_fill_insert(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, unsigned int, float const&);0ns;0;2;0.0
  | +-;std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_fill_insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, unsigned int, cv::Mat const&);0ns;0;5;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::reserve(unsigned int);0ns;0;1052;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_fill_insert(__gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > >, unsigned int, cv::Point_<float> const&);0ns;0;1053;0.0
  | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > >, cv::Point_<float> const&);;1;0;0.49261084
  | | +-;std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > >, cv::Point_<float> const&) (vector.tcc:360);;1;;0.49261084
  | |   +-;0x805a53c;;1;;0.49261084
  | +-;std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned int, int const&);;0;0;0.0
  |   +-;std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned int, int const&) (vector.tcc:439);;0;;0.0
  |     +-;0x806f672;;0;;0.0
  +-;??;;0;;0.0
  | +-;__libc_csu_init;;0;0;0.0
  +-;alloc_traits.h;;0;;0.0
  | +-;__gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&);0ns;0;4;0.0
  | +-;__gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::max_size(std::allocator<cv::Mat> const&);0ns;0;2114;0.0
  | +-;__gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&);0ns;0;4208;0.0
  | +-;__gnu_cxx::__alloc_traits<std::allocator<cv::Point_<float> > >::_S_on_swap(std::allocator<cv::Point_<float> >&, std::allocator<cv::Point_<float> >&);0ns;0;8400;0.0
  | +-;__gnu_cxx::__alloc_traits<std::allocator<cv::Point_<float> > >::max_size(std::allocator<cv::Point_<float> > const&);0ns;0;63122;0.0
  | | +-;__gnu_cxx::__alloc_traits<std::allocator<cv::Point_<float> > >::max_size(std::allocator<cv::Point_<float> > const&) (alloc_traits.h:207);;0;;0.0
  | |   +-;0x805b0e1;;0;;0.0
  | +-;void __gnu_cxx::__alloc_traits<std::allocator<cv::Point_<float> > >::construct<cv::Point_<float> >(std::allocator<cv::Point_<float> >&, cv::Point_<float>*, cv::Point_<float> const&);0ns;0;82280;0.0
  +-;allocator.h;;0;;0.0
  | +-;std::allocator<cv::Ptr<cv::videostab::InpainterBase> >::allocator();0ns;0;1;0.0
  | +-;std::allocator<cv::Ptr<cv::videostab::InpainterBase> >::~allocator();0ns;0;1;0.0
  | +-;std::allocator<cv::KeyPoint>::allocator();0ns;0;2;0.0
  | +-;std::allocator<cv::KeyPoint>::~allocator();0ns;0;2;0.0
  | +-;std::allocator<unsigned char>::allocator();0ns;0;2;0.0
  | +-;std::allocator<unsigned char>::~allocator();0ns;0;2;0.0
  | +-;std::allocator<float>::allocator();0ns;0;3;0.0
  | +-;std::allocator<float>::~allocator();0ns;0;3;0.0
  | +-;std::allocator<cv::Mat>::allocator();0ns;0;5;0.0
  | +-;std::allocator<cv::Mat>::~allocator();0ns;0;5;0.0
  | +-;std::allocator<int>::allocator();0ns;0;526;0.0
  | +-;std::allocator<int>::allocator(std::allocator<int> const&);0ns;0;526;0.0
  | +-;std::allocator<int>::~allocator();0ns;0;1052;0.0
  | +-;std::allocator<cv::Point_<float> >::allocator(std::allocator<cv::Point_<float> > const&);0ns;0;2104;0.0
  | +-;std::allocator<cv::Point_<float> >::allocator();0ns;0;2112;0.0
  | +-;std::allocator<cv::Point_<float> >::~allocator();0ns;0;4216;0.0
  | +-;std::__alloc_swap<std::allocator<cv::Point_<float> >, true>::_S_do_it(std::allocator<cv::Point_<float> >&, std::allocator<cv::Point_<float> >&);0ns;0;8400;0.0
  +-;basic_string.h;;0;;0.0
  | +-;bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*);0ns;0;6;0.0
  | +-;std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*);0ns;0;7;0.0
  | +-;bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*);0ns;0;31;0.0
  +-;core.hpp;;0;;0.0
  | +-;float cv::CommandLineParser::get<float>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) const;0ns;0;3;0.0
  | +-;int cv::CommandLineParser::get<int>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) const;0ns;0;3;0.0
  | +-;std::basic_string<char, std::char_traits<char>, std::allocator<char> > cv::CommandLineParser::get<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) const;0ns;0;30;0.0
  | +-;cv::Mat_<float>::~Mat_();0ns;0;170950;0.0
  +-;deblurring.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZN2cv9videostab14calcBlurrinessERKNS_3MatE;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  +-;deblurring.hpp;;0;;0.0
  | +-;cv::videostab::DeblurerBase::DeblurerBase();0ns;0;1;0.0
  | +-;cv::videostab::DeblurerBase::~DeblurerBase();0ns;0;1;0.0
  | +-;cv::videostab::NullDeblurer::NullDeblurer();0ns;0;1;0.0
  | +-;cv::videostab::NullDeblurer::~NullDeblurer();0ns;0;1;0.0
  | +-;cv::videostab::NullDeblurer::~NullDeblurer();0ns;0;1;0.0
  +-;fast_marching.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZNK2cv9videostab18FastMarchingMethod5solveEiiii;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  +-;frame_source.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZN2cv9videostab15VideoFileSourceC2ERKSsb;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  | +-;cv::videostab::(anonymous namespace)::VideoFileSourceImpl::VideoFileSourceImpl(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);0ns;0;1;0.0
  | +-;cv::videostab::(anonymous namespace)::VideoFileSourceImpl::count();0ns;0;1;0.0
  | +-;cv::videostab::(anonymous namespace)::VideoFileSourceImpl::fps();0ns;0;1;0.0
  | +-;cv::videostab::(anonymous namespace)::VideoFileSourceImpl::reset();0ns;0;1;0.0
  | +-;cv::videostab::(anonymous namespace)::VideoFileSourceImpl::~VideoFileSourceImpl();0ns;0;1;0.0
  | +-;cv::videostab::(anonymous namespace)::VideoFileSourceImpl::~VideoFileSourceImpl();0ns;0;1;0.0
  | +-;cv::videostab::VideoFileSource::VideoFileSource(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);0ns;0;1;0.0
  | +-;cv::videostab::VideoFileSource::count();0ns;0;1;0.0
  | +-;cv::videostab::VideoFileSource::fps();0ns;0;1;0.0
  | +-;cv::videostab::(anonymous namespace)::VideoFileSourceImpl::nextFrame();0ns;0;567;0.0
  | +-;cv::videostab::VideoFileSource::nextFrame();0ns;0;567;0.0
  +-;frame_source.hpp;;0;;0.0
  | +-;cv::videostab::NullFrameSource::NullFrameSource();0ns;0;1;0.0
  | +-;cv::videostab::NullFrameSource::~NullFrameSource();0ns;0;1;0.0
  | +-;cv::videostab::NullFrameSource::~NullFrameSource();0ns;0;1;0.0
  | +-;cv::videostab::VideoFileSource::~VideoFileSource();0ns;0;1;0.0
  | +-;cv::videostab::VideoFileSource::~VideoFileSource();0ns;0;1;0.0
  | +-;cv::videostab::IFrameSource::IFrameSource();0ns;0;4;0.0
  | +-;cv::videostab::IFrameSource::~IFrameSource();0ns;0;4;0.0
  +-;global_motion.hpp;;0;;0.0
  | +-;cv::videostab::MotionEstimatorRansacL2::ransacParams() const;0ns;0;1;0.0
  | +-;cv::videostab::ImageMotionEstimatorBase::ImageMotionEstimatorBase(cv::videostab::MotionModel);0ns;0;2;0.0
  | +-;cv::videostab::ImageMotionEstimatorBase::setMotionModel(cv::videostab::MotionModel);0ns;0;2;0.0
  | +-;cv::videostab::ImageMotionEstimatorBase::~ImageMotionEstimatorBase();0ns;0;2;0.0
  | +-;cv::videostab::KeypointBasedMotionEstimator::setOpticalFlowEstimator(cv::Ptr<cv::videostab::ISparseOptFlowEstimator>);0ns;0;2;0.0
  | +-;cv::videostab::KeypointBasedMotionEstimator::~KeypointBasedMotionEstimator();0ns;0;2;0.0
  | +-;cv::videostab::KeypointBasedMotionEstimator::~KeypointBasedMotionEstimator();0ns;0;2;0.0
  | +-;cv::videostab::MotionEstimatorBase::MotionEstimatorBase(cv::videostab::MotionModel);0ns;0;2;0.0
  | +-;cv::videostab::MotionEstimatorBase::setMotionModel(cv::videostab::MotionModel);0ns;0;2;0.0
  | +-;cv::videostab::MotionEstimatorBase::~MotionEstimatorBase();0ns;0;2;0.0
  | +-;cv::videostab::MotionEstimatorRansacL2::~MotionEstimatorRansacL2();0ns;0;2;0.0
  | +-;cv::videostab::MotionEstimatorRansacL2::~MotionEstimatorRansacL2();0ns;0;2;0.0
  | +-;cv::videostab::KeypointBasedMotionEstimator::setDetector(cv::Ptr<cv::FeatureDetector>);0ns;0;3;0.0
  | +-;cv::videostab::KeypointBasedMotionEstimator::setOutlierRejector(cv::Ptr<cv::videostab::IOutlierRejector>);0ns;0;3;0.0
  | +-;cv::videostab::MotionEstimatorRansacL2::setMinInlierRatio(float);0ns;0;3;0.0
  | +-;cv::videostab::MotionEstimatorRansacL2::setRansacParams(cv::videostab::RansacParams const&);0ns;0;3;0.0
  | +-;cv::videostab::KeypointBasedMotionEstimator::motionModel() const;0ns;0;528;0.0
  | +-;cv::videostab::MotionEstimatorBase::motionModel() const;0ns;0;1582;0.0
  +-;highgui_c.h;;0;;0.0
  | +-;CV_FOURCC;0ns;0;1;0.0
  +-;inpainting.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZN2cv9videostab18InpaintingPipeline9setRadiusEi;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  +-;inpainting.hpp;;0;;0.0
  | +-;cv::videostab::InpaintingPipeline::InpaintingPipeline();0ns;0;1;0.0
  | +-;cv::videostab::InpaintingPipeline::empty() const;0ns;0;1;0.0
  | +-;cv::videostab::InpaintingPipeline::~InpaintingPipeline();0ns;0;1;0.0
  | +-;cv::videostab::InpaintingPipeline::~InpaintingPipeline();0ns;0;1;0.0
  | +-;cv::videostab::NullInpainter::NullInpainter();0ns;0;1;0.0
  | +-;cv::videostab::NullInpainter::~NullInpainter();0ns;0;1;0.0
  | +-;cv::videostab::NullInpainter::~NullInpainter();0ns;0;1;0.0
  | +-;cv::videostab::InpainterBase::InpainterBase();0ns;0;2;0.0
  | +-;cv::videostab::InpainterBase::~InpainterBase();0ns;0;2;0.0
  +-;log.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZN2cv9videostab11LogToStdout5printEPKcz;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  | +-;cv::videostab::LogToStdout::print(char const*, ...);0ns;0;569;0.0
  +-;log.hpp;;0;;0.0
  | +-;cv::videostab::ILog::ILog();0ns;0;1;0.0
  | +-;cv::videostab::ILog::~ILog();0ns;0;1;0.0
  | +-;cv::videostab::LogToStdout::LogToStdout();0ns;0;1;0.0
  | +-;cv::videostab::LogToStdout::~LogToStdout();0ns;0;1;0.0
  | +-;cv::videostab::LogToStdout::~LogToStdout();0ns;0;1;0.0
  +-;motion_core.hpp;;0;;0.0
  | +-;cv::videostab::RansacParams::RansacParams();0ns;0;2;0.0
  | +-;cv::videostab::RansacParams::RansacParams(int, float, float, float);0ns;0;2;0.0
  | +-;cv::videostab::RansacParams::default2dMotion(cv::videostab::MotionModel);0ns;0;2;0.0
  | +-;cv::videostab::RansacParams::niters() const;0ns;0;526;0.0
  +-;motion_stabilizing.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZN2cv9videostab27MotionStabilizationPipeline9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiEPS3_;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  | +-;cv::videostab::GaussianMotionFilter::setParams(int, float);0ns;0;2;0.0
  | +-;cv::videostab::GaussianMotionFilter::stabilize(int, std::vector<cv::Mat, std::allocator<cv::Mat> > const&, std::pair<int, int>);0ns;0;527;0.0
  +-;motion_stabilizing.hpp;;0;;0.0
  | +-;cv::videostab::GaussianMotionFilter::GaussianMotionFilter(int, float);0ns;0;2;0.0
  | +-;cv::videostab::GaussianMotionFilter::~GaussianMotionFilter();0ns;0;2;0.0
  | +-;cv::videostab::GaussianMotionFilter::~GaussianMotionFilter();0ns;0;2;0.0
  | +-;cv::videostab::IMotionStabilizer::IMotionStabilizer();0ns;0;2;0.0
  | +-;cv::videostab::IMotionStabilizer::~IMotionStabilizer();0ns;0;2;0.0
  | +-;cv::videostab::MotionFilterBase::MotionFilterBase();0ns;0;2;0.0
  | +-;cv::videostab::MotionFilterBase::~MotionFilterBase();0ns;0;2;0.0
  +-;move.h;;0;;0.0
  | +-;cv::Mat* std::__addressof<cv::Mat>(cv::Mat&);0ns;0;5018;0.0
  | +-;void std::swap<cv::Point_<float>*>(cv::Point_<float>*&, cv::Point_<float>*&);0ns;0;25200;0.0
  | +-;cv::Point_<float>* std::__addressof<cv::Point_<float> >(cv::Point_<float>&);0ns;0;88322;0.0
  +-;new;;0;;0.0
  | +-;operator new(unsigned int, void*);0ns;0;175215;0.0
  +-;new_allocator.h;;0;;0.0
  | +-;__gnu_cxx::new_allocator<cv::KeyPoint>::deallocate(cv::KeyPoint*, unsigned int);0ns;0;1;0.0
  | +-;__gnu_cxx::new_allocator<cv::Ptr<cv::videostab::InpainterBase> >::new_allocator();0ns;0;1;0.0
  | +-;__gnu_cxx::new_allocator<cv::Ptr<cv::videostab::InpainterBase> >::~new_allocator();0ns;0;1;0.0
  | +-;__gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned int);0ns;0;1;0.0
  | +-;__gnu_cxx::new_allocator<cv::KeyPoint>::new_allocator();0ns;0;2;0.0
  | +-;__gnu_cxx::new_allocator<cv::KeyPoint>::~new_allocator();0ns;0;2;0.0
  | +-;__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*);0ns;0;2;0.0
  | +-;__gnu_cxx::new_allocator<float>::deallocate(float*, unsigned int);0ns;0;2;0.0
  | +-;__gnu_cxx::new_allocator<unsigned char>::new_allocator();0ns;0;2;0.0
  | +-;__gnu_cxx::new_allocator<unsigned char>::~new_allocator();0ns;0;2;0.0
  | +-;__gnu_cxx::new_allocator<float>::new_allocator();0ns;0;3;0.0
  | +-;__gnu_cxx::new_allocator<float>::~new_allocator();0ns;0;3;0.0
  | +-;__gnu_cxx::new_allocator<cv::Mat>::deallocate(cv::Mat*, unsigned int);0ns;0;5;0.0
  | +-;__gnu_cxx::new_allocator<cv::Mat>::new_allocator();0ns;0;5;0.0
  | +-;__gnu_cxx::new_allocator<cv::Mat>::~new_allocator();0ns;0;5;0.0
  | +-;__gnu_cxx::new_allocator<float>::max_size() const;0ns;0;6;0.0
  | +-;__gnu_cxx::new_allocator<int>::deallocate(int*, unsigned int);0ns;0;526;0.0
  | +-;__gnu_cxx::new_allocator<int>::new_allocator();0ns;0;526;0.0
  | +-;__gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&);0ns;0;526;0.0
  | +-;__gnu_cxx::new_allocator<int>::~new_allocator();0ns;0;1052;0.0
  | +-;__gnu_cxx::new_allocator<cv::Mat>::allocate(unsigned int, void const*);0ns;0;1057;0.0
  | +-;__gnu_cxx::new_allocator<cv::Point_<float> >::new_allocator(__gnu_cxx::new_allocator<cv::Point_<float> > const&);0ns;0;2104;0.0
  | +-;__gnu_cxx::new_allocator<cv::Point_<float> >::new_allocator();0ns;0;2112;0.0
  | +-;__gnu_cxx::new_allocator<int>::allocate(unsigned int, void const*);0ns;0;2630;0.0
  | +-;__gnu_cxx::new_allocator<cv::Mat>::max_size() const;0ns;0;3171;0.0
  | +-;__gnu_cxx::new_allocator<cv::Point_<float> >::~new_allocator();0ns;0;4216;0.0
  | +-;__gnu_cxx::new_allocator<cv::Point_<float> >::deallocate(cv::Point_<float>*, unsigned int);0ns;0;6316;0.0
  | +-;__gnu_cxx::new_allocator<int>::max_size() const;0ns;0;6838;0.0
  | +-;__gnu_cxx::new_allocator<cv::Point_<float> >::allocate(unsigned int, void const*);0ns;0;33141;0.0
  | +-;__gnu_cxx::new_allocator<cv::Point_<float> >::construct(cv::Point_<float>*, cv::Point_<float> const&);0ns;0;82280;0.0
  | +-;__gnu_cxx::new_allocator<cv::Point_<float> >::max_size() const;0ns;0;96263;0.0
  +-;optical_flow.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZN2cv9videostab27SparsePyrLkOptFlowEstimator3runERKNS_11_InputArrayES4_S4_RKNS_12_OutputArrayES7_S7_;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  | +-;cv::videostab::SparsePyrLkOptFlowEstimator::run(cv::_InputArray const&, cv::_InputArray const&, cv::_InputArray const&, cv::_OutputArray const&, cv::_OutputArray const&, cv::_OutputArray const&);0ns;0;526;0.0
  +-;optical_flow.hpp;;0;;0.0
  | +-;cv::videostab::ISparseOptFlowEstimator::ISparseOptFlowEstimator();0ns;0;2;0.0
  | +-;cv::videostab::ISparseOptFlowEstimator::~ISparseOptFlowEstimator();0ns;0;2;0.0
  | +-;cv::videostab::PyrLkOptFlowEstimatorBase::PyrLkOptFlowEstimatorBase();0ns;0;2;0.0
  | +-;cv::videostab::PyrLkOptFlowEstimatorBase::setMaxLevel(int);0ns;0;2;0.0
  | +-;cv::videostab::PyrLkOptFlowEstimatorBase::setWinSize(cv::Size_<int>);0ns;0;2;0.0
  | +-;cv::videostab::PyrLkOptFlowEstimatorBase::~PyrLkOptFlowEstimatorBase();0ns;0;2;0.0
  | +-;cv::videostab::SparsePyrLkOptFlowEstimator::SparsePyrLkOptFlowEstimator();0ns;0;2;0.0
  | +-;cv::videostab::SparsePyrLkOptFlowEstimator::~SparsePyrLkOptFlowEstimator();0ns;0;2;0.0
  | +-;cv::videostab::SparsePyrLkOptFlowEstimator::~SparsePyrLkOptFlowEstimator();0ns;0;2;0.0
  +-;outlier_rejection.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZN2cv9videostab19NullOutlierRejector7processENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayE;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  +-;outlier_rejection.hpp;;0;;0.0
  | +-;cv::videostab::IOutlierRejector::IOutlierRejector();0ns;0;3;0.0
  | +-;cv::videostab::IOutlierRejector::~IOutlierRejector();0ns;0;3;0.0
  | +-;cv::videostab::NullOutlierRejector::NullOutlierRejector();0ns;0;3;0.0
  | +-;cv::videostab::NullOutlierRejector::~NullOutlierRejector();0ns;0;3;0.0
  | +-;cv::videostab::NullOutlierRejector::~NullOutlierRejector();0ns;0;3;0.0
  +-;precomp.hpp;;0;;0.0
  | +-;sqr(float);0ns;0;2201292;0.0
  +-;ring_buffer.hpp;;0;;0.0
  | +-;cv::Mat& cv::videostab::at<cv::Mat>(int, std::vector<cv::Mat, std::allocator<cv::Mat> >&);0ns;0;4413;0.0
  | +-;cv::Mat const& cv::videostab::at<cv::Mat>(int, std::vector<cv::Mat, std::allocator<cv::Mat> > const&);0ns;0;820527;0.0
  +-;stabilizer.cpp;;0;;0.0
  | +-;_GLOBAL__sub_I__ZN2cv9videostab14StabilizerBaseC2Ev;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  | +-;cv::videostab::OnePassStabilizer::OnePassStabilizer();0ns;0;1;0.0
  | +-;cv::videostab::OnePassStabilizer::reset();0ns;0;1;0.0
  | +-;cv::videostab::OnePassStabilizer::setUp(cv::Mat const&);0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::StabilizerBase();0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::logProcessingTime();0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::reset();0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::setUp(cv::Mat const&);0ns;0;1;0.0
  | +-;cv::videostab::OnePassStabilizer::estimateMotion();0ns;0;526;0.0
  | +-;cv::videostab::OnePassStabilizer::estimateStabilizationMotion();0ns;0;527;0.0
  | +-;cv::videostab::OnePassStabilizer::postProcessFrame(cv::Mat const&);0ns;0;527;0.0
  | +-;cv::videostab::StabilizerBase::postProcessFrame(cv::Mat const&);0ns;0;527;0.0
  | +-;cv::videostab::StabilizerBase::stabilizeFrame();0ns;0;527;0.0
  | +-;cv::videostab::StabilizerBase::nextStabilizedFrame();0ns;0;528;0.0
  | +-;cv::videostab::StabilizerBase::doOneIteration();0ns;0;567;0.0
  +-;stabilizer.hpp;;0;;0.0
  | +-;cv::videostab::OnePassStabilizer::~OnePassStabilizer();0ns;0;1;0.0
  | +-;cv::videostab::OnePassStabilizer::~OnePassStabilizer();0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::motionEstimator() const;0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::setDeblurer(cv::Ptr<cv::videostab::DeblurerBase>);0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::setInpainter(cv::Ptr<cv::videostab::InpainterBase>);0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::setLog(cv::Ptr<cv::videostab::ILog>);0ns;0;1;0.0
  | +-;cv::videostab::StabilizerBase::~StabilizerBase();0ns;0;1;0.0
  | +-;cv::videostab::OnePassStabilizer::setMotionFilter(cv::Ptr<cv::videostab::MotionFilterBase>);0ns;0;2;0.0
  | +-;cv::videostab::StabilizerBase::setBorderMode(int);0ns;0;2;0.0
  | +-;cv::videostab::StabilizerBase::setCorrectionForInclusion(bool);0ns;0;2;0.0
  | +-;cv::videostab::StabilizerBase::setFrameSource(cv::Ptr<cv::videostab::IFrameSource>);0ns;0;2;0.0
  | +-;cv::videostab::StabilizerBase::setMotionEstimator(cv::Ptr<cv::videostab::ImageMotionEstimatorBase>);0ns;0;2;0.0
  | +-;cv::videostab::StabilizerBase::setRadius(int);0ns;0;2;0.0
  | +-;cv::videostab::StabilizerBase::setTrimRatio(float);0ns;0;2;0.0
  | +-;cv::videostab::OnePassStabilizer::nextFrame();0ns;0;528;0.0
  +-;stl_algobase.h;;0;;0.0
  | +-;__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&);0ns;0;2;0.0
  | +-;float* std::fill_n<float*, unsigned int, float>(float*, unsigned int, float const&);0ns;0;2;0.0
  | +-;float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*);0ns;0;4;0.0
  | +-;float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*);0ns;0;4;0.0
  | +-;float* std::__copy_move_a<false, float*, float*>(float*, float*, float*);0ns;0;4;0.0
  | +-;float* std::copy<float*, float*>(float*, float*, float*);0ns;0;4;0.0
  | +-;std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*);0ns;0;8;0.0
  | +-;std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*);0ns;0;14;0.0
  | +-;int const& std::max<int>(int const&, int const&);0ns;0;527;0.0
  | +-;int const& std::min<int>(int const&, int const&);0ns;0;527;0.0
  | +-;__gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned int, int>(int*, unsigned int, int const&);0ns;0;2630;0.0
  | +-;int* std::fill_n<int*, unsigned int, int>(int*, unsigned int, int const&);0ns;0;2630;0.0
  | +-;int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*);0ns;0;4208;0.0
  | +-;int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*);0ns;0;4208;0.0
  | +-;int* std::__copy_move_a<false, int*, int*>(int*, int*, int*);0ns;0;4208;0.0
  | +-;int* std::copy<int*, int*>(int*, int*, int*);0ns;0;4208;0.0
  | +-;std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*);0ns;0;8416;0.0
  | +-;std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*);0ns;0;15254;0.0
  | +-;unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&);0ns;0;34198;0.0
  +-;stl_iterator.h;;0;;0.0
  | +-;bool __gnu_cxx::operator==<cv::Ptr<cv::videostab::InpainterBase> const*, std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > > >(__gnu_cxx::__normal_iterator<cv::Ptr<cv::videostab::InpainterBase> const*, std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > > > const&, __gnu_cxx::__normal_iterator<cv::Ptr<cv::videostab::InpainterBase> const*, std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > > > const&);0ns;0;1;0.0
  | +-;__gnu_cxx::__normal_iterator<cv::Ptr<cv::videostab::InpainterBase> const*, std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > > >::__normal_iterator(cv::Ptr<cv::videostab::InpainterBase> const* const&);0ns;0;2;0.0
  | +-;__gnu_cxx::__normal_iterator<cv::Ptr<cv::videostab::InpainterBase> const*, std::vector<cv::Ptr<cv::videostab::InpainterBase>, std::allocator<cv::Ptr<cv::videostab::InpainterBase> > > >::base() const;0ns;0;2;0.0
  | +-;__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&);0ns;0;2;0.0
  | +-;__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&);0ns;0;4;0.0
  | +-;__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const;0ns;0;8;0.0
  | +-;__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::difference_type __gnu_cxx::operator-<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&);0ns;0;1057;0.0
  | +-;__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::__normal_iterator(cv::Mat* const&);0ns;0;1062;0.0
  | +-;__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&);0ns;0;2104;0.0
  | +-;__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&);0ns;0;2104;0.0
  | +-;__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::base() const;0ns;0;4228;0.0
  | +-;__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const;0ns;0;8416;0.0
  | +-;__gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > >::difference_type __gnu_cxx::operator-<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > >(__gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > > const&, __gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > > const&);0ns;0;31035;0.0
  | +-;__gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > >::__normal_iterator(cv::Point_<float>* const&);0ns;0;32088;0.0
  | +-;__gnu_cxx::__normal_iterator<cv::Point_<float>*, std::vector<cv::Point_<float>, std::allocator<cv::Point_<float> > > >::base() const;0ns;0;124140;0.0
  | +-;__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const;;0;;0.0
  |   +-;__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const (stl_iterator.h:793);;0;;0.0
  |     +-;0x806f670;;0;;0.0
  +-;stl_iterator_base_types.h;;0;;0.0
  | +-;std::_Iter_base<float*, false>::_S_base(float*);0ns;0;22;0.0
  | +-;std::_Iter_base<int*, false>::_S_base(int*);0ns;0;23670;0.0
  +-;stl_pair.h;;0;;0.0
  | +-;std::pair<int, int> std::make_pair<int, int>(int, int);0ns;0;527;0.0
  | +-;std::pair<int, int>::pair(int const&, int const&);0ns;0;527;0.0
  +-;stl_uninitialized.h;;0;;0.0
  | +-;void std::__uninitialized_fill_n<true>::__uninit_fill_n<float*, unsigned int, float>(float*, unsigned int, float const&);0ns;0;2;0.0
  | +-;void std::__uninitialized_fill_n_a<float*, unsigned int, float, float>(float*, unsigned int, float const&, std::allocator<float>&);0ns;0;2;0.0
  | +-;void std::uninitialized_fill_n<float*, unsigned int, float>(float*, unsigned int, float const&);0ns;0;2;0.0
  | +-;float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*);0ns;0;4;0.0
  | +-;float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&);0ns;0;4;0.0
  | +-;float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&);0ns;0;4;0.0
  | +-;float* std::uninitialized_copy<float*, float*>(float*, float*, float*);0ns;0;4;0.0
  | +-;void std::__uninitialized_fill_n<false>::__uninit_fill_n<cv::Mat*, unsigned int, cv::Mat>(cv::Mat*, unsigned int, cv::Mat const&);0ns;0;1057;0.0
  | +-;void std::__uninitialized_fill_n_a<cv::Mat*, unsigned int, cv::Mat, cv::Mat>(cv::Mat*, unsigned int, cv::Mat const&, std::allocator<cv::Mat>&);0ns;0;1057;0.0
  | +-;void std::uninitialized_fill_n<cv::Mat*, unsigned int, cv::Mat>(cv::Mat*, unsigned int, cv::Mat const&);0ns;0;1057;0.0
  | +-;cv::Mat* std::__uninitialized_copy<false>::__uninit_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*);0ns;0;2114;0.0
  | +-;cv::Mat* std::__uninitialized_copy_a<cv::Mat*, cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&);0ns;0;2114;0.0
  | +-;cv::Mat* std::__uninitialized_move_if_noexcept_a<cv::Mat*, cv::Mat*, std::allocator<cv::Mat> >(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&);0ns;0;2114;0.0
  | +-;cv::Mat* std::uninitialized_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*);0ns;0;2114;0.0
  | +-;void std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned int, int>(int*, unsigned int, int const&);0ns;0;2630;0.0
  | +-;void std::__uninitialized_fill_n_a<int*, unsigned int, int, int>(int*, unsigned int, int const&, std::allocator<int>&);0ns;0;2630;0.0
  | +-;void std::uninitialized_fill_n<int*, unsigned int, int>(int*, unsigned int, int const&);0ns;0;2630;0.0
  | +-;void std::__uninitialized_fill_n<false>::__uninit_fill_n<cv::Point_<float>*, unsigned int, cv::Point_<float> >(cv::Point_<float>*, unsigned int, cv::Point_<float> const&);0ns;0;3157;0.0
  | +-;void std::__uninitialized_fill_n_a<cv::Point_<float>*, unsigned int, cv::Point_<float>, cv::Point_<float> >(cv::Point_<float>*, unsigned int, cv::Point_<float> const&, std::allocator<cv::Point_<float> >&);0ns;0;3157;0.0
  | +-;void std::uninitialized_fill_n<cv::Point_<float>*, unsigned int, cv::Point_<float> >(cv::Point_<float>*, unsigned int, cv::Point_<float> const&);0ns;0;3157;0.0
  | +-;int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*);0ns;0;4208;0.0
  | +-;int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&);0ns;0;4208;0.0
  | +-;int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&);0ns;0;4208;0.0
  | +-;int* std::uninitialized_copy<int*, int*>(int*, int*, int*);0ns;0;4208;0.0
  | +-;cv::Point_<float>* std::__uninitialized_move_if_noexcept_a<cv::Point_<float>*, cv::Point_<float>*, std::allocator<cv::Point_<float> > >(cv::Point_<float>*, cv::Point_<float>*, cv::Point_<float>*, std::allocator<cv::Point_<float> >&);0ns;0;62070;0.0
  | +-;cv::Point_<float>* std::__uninitialized_copy<false>::__uninit_copy<cv::Point_<float>*, cv::Point_<float>*>(cv::Point_<float>*, cv::Point_<float>*, cv::Point_<float>*);0ns;0;62072;0.0
  | +-;cv::Point_<float>* std::__uninitialized_copy_a<cv::Point_<float>*, cv::Point_<float>*, cv::Point_<float> >(cv::Point_<float>*, cv::Point_<float>*, cv::Point_<float>*, std::allocator<cv::Point_<float> >&);0ns;0;62072;0.0
  | +-;cv::Point_<float>* std::uninitialized_copy<cv::Point_<float>*, cv::Point_<float>*>(cv::Point_<float>*, cv::Point_<float>*, cv::Point_<float>*);0ns;0;62072;0.0
  +-;videostab.cpp;;0;;0.0
  | +-;MotionEstimatorRansacL2Builder::build();0ns;0;1;0.0
  | +-;_GLOBAL__sub_I_stabilizedFrames;0ns;0;1;0.0
  | +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
  | +-;motionModel(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);0ns;0;1;0.0
  | +-;run();0ns;0;1;0.0
  | +-;IMotionEstimatorBuilder::IMotionEstimatorBuilder(cv::CommandLineParser&);0ns;0;2;0.0
  | +-;IMotionEstimatorBuilder::~IMotionEstimatorBuilder();0ns;0;2;0.0
  | +-;MotionEstimatorRansacL2Builder::MotionEstimatorRansacL2Builder(cv::CommandLineParser&, bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);0ns;0;2;0.0
  | +-;MotionEstimatorRansacL2Builder::~MotionEstimatorRansacL2Builder();0ns;0;2;0.0
  | +-;MotionEstimatorRansacL2Builder::~MotionEstimatorRansacL2Builder();0ns;0;2;0.0
  | +-;main;;0;0;0.0
  +-;wobble_suppression.cpp;;0;;0.0
    +-;_GLOBAL__sub_I__ZN2cv9videostab20WobbleSuppressorBaseC2Ev;0ns;0;1;0.0
    +-;__static_initialization_and_destruction_0(int, int);0ns;0;1;0.0
